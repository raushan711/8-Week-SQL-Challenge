WITH Viewed_product AS
(
	SELECT p.page_id as product_id ,p.page_name as products,p.product_category,
	COUNT(*) as total_view
	FROM clique_bait.events e JOIN clique_bait.page_hierarchy p
	ON p.page_id=e.page_id 
	JOIN clique_bait.event_identifier ei
	ON e.event_type = ei.event_type
	WHERE ei.event_name='Page View' and p.product_id is NOT NULL
	GROUP BY 1,2,3
),
added_to_cart AS
(
	SELECT 
		p.page_id as product_id ,
		COUNT(*) as cart_product_count
	FROM clique_bait.events e 
		JOIN clique_bait.page_hierarchy p
	ON p.page_id=e.page_id 
		JOIN clique_bait.event_identifier ei
	ON e.event_type = ei.event_type
		WHERE ei.event_name='Add to Cart' and p.product_id is NOT NULL
	GROUP BY 1 
),
abondoned_product AS
(
	SELECT ph.page_id as product_id,
			sum(
				CASE
					WHEN event_type = 2 THEN 1
					ELSE 0
				END
			) AS not_purchased
		FROM clique_bait.page_hierarchy AS ph
			JOIN clique_bait.events AS e ON ph.page_id = e.page_id
		WHERE ph.product_id IS NOT NULL
			AND NOT exists(
				SELECT visit_id
				FROM clique_bait.events
				WHERE event_type = 3
					AND e.visit_id = visit_id
			)
			AND ph.product_id IS NOT NULL
		GROUP BY 1
),
purchased_product AS
(
  	SELECT ph.page_id as product_id,
			sum( 
				CASE
					WHEN event_type = 2 THEN 1
					ELSE 0
				END
			) AS purchased
		FROM clique_bait.page_hierarchy AS ph
			JOIN clique_bait.events AS e ON ph.page_id = e.page_id
		WHERE ph.product_id IS NOT NULL
			AND exists(
				SELECT visit_id
				FROM clique_bait.events
				WHERE event_type = 3
					AND e.visit_id = visit_id
			)
			AND ph.product_id IS NOT NULL
		GROUP BY 1
),
product_details AS
(
	SELECT 
		v.product_id,v.products,v.product_category,v.total_view as page_view,
		a.cart_product_count as added_to_cart,p.purchased,
		ab.not_purchased 
	FROM Viewed_product v 
	JOIN purchased_product p USING(product_id) 
	JOIN added_to_cart a USING(product_id) 
	JOIN abondoned_product ab USING(product_id) 
)
SELECT * FROM product_details








WITH Viewed_product_per_category AS
(
	SELECT p.product_category as product_category,
	COUNT(*) as total_view
	FROM clique_bait.events e JOIN clique_bait.page_hierarchy p
	ON p.page_id=e.page_id 
	JOIN clique_bait.event_identifier ei
	ON e.event_type = ei.event_type
	WHERE ei.event_name='Page View' and p.product_id is NOT NULL
	GROUP BY 1
),
added_to_cart_per_category AS
(
	SELECT p.product_category as product_category,
	COUNT(*) as cart_product_count
	FROM clique_bait.events e JOIN clique_bait.page_hierarchy p
	ON p.page_id=e.page_id 
	JOIN clique_bait.event_identifier ei
	ON e.event_type = ei.event_type
	WHERE ei.event_name='Add to Cart' and p.product_id is NOT NULL
	GROUP BY 1
),
abondoned_product_per_category AS
(
	SELECT ph.product_category as product_category,
			sum(
				CASE
					WHEN event_type = 2 THEN 1
					ELSE 0
				END
			) AS not_purchased
		FROM clique_bait.page_hierarchy AS ph
			JOIN clique_bait.events AS e ON ph.page_id = e.page_id
		WHERE ph.product_id IS NOT NULL
			AND NOT exists(
				SELECT visit_id
				FROM clique_bait.events
				WHERE event_type = 3
					AND e.visit_id = visit_id
			)
			AND ph.product_id IS NOT NULL
		GROUP BY 1
),
purchased_product_per_category AS
(
  	SELECT ph.product_category as product_category,
			sum( 
				CASE
					WHEN event_type = 2 THEN 1
					ELSE 0
				END
			) AS purchased
		FROM clique_bait.page_hierarchy AS ph
			JOIN clique_bait.events AS e ON ph.page_id = e.page_id
		WHERE ph.product_id IS NOT NULL
			AND exists(
				SELECT visit_id
				FROM clique_bait.events
				WHERE event_type = 3
					AND e.visit_id = visit_id
			)
			AND ph.product_id IS NOT NULL
		GROUP BY 1
),
 product_categorywise_details AS
(
	SELECT 
		v.product_category,v.total_view as page_view_per_category,
		a.cart_product_count as added_to_cart_count_per_category,p.purchased as purchase_per_category,
		ab.not_purchased as abondoned_per_category 
	FROM Viewed_product_per_category v 
	JOIN purchased_product_per_category p USING(product_category) 
	JOIN added_to_cart_per_category a USING(product_category) 
	JOIN abondoned_product_per_category ab USING(product_category) 
)
SELECT * FROM product_categorywise_details

